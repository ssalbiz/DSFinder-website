DSFinder has run for 0 min. 9 sec.

0-CYCLES REPORT
===============


Blacklisted, likely not data structures:
org.apache.derby.client.am.SqlException: *java.lang.Throwable* [protected] throwable_
org.apache.derby.client.am.Statement: *org.apache.derby.client.am.PreparedStatement* [public] preparedStatementForAutoGeneratedKeys_
org.apache.derby.iapi.jdbc.BrokeredPreparedStatement30: *java.lang.Object* [private] [final] generatedKeys
org.apache.derby.iapi.types.UserType: *java.lang.Object* [private] value
org.apache.derby.impl.drda.Pkgnamcsn: *java.lang.Object* [private] statementKey
org.apache.derby.impl.io.vfmem.DataStore: *java.lang.Object* [private] [final] LOCK
org.apache.derby.impl.io.vfmem.DataStore: *java.lang.Object* [private] [final] TMP_COUNTER_LOCK
org.apache.derby.impl.services.bytecode.VMTypeIdCacheable: *java.lang.Object* [private] key
org.apache.derby.impl.sql.compile.ParameterNode: *org.apache.derby.impl.sql.compile.ValueNode* [private] returnOutputParameter
org.apache.derby.impl.sql.compile.UserTypeConstantNode: *java.lang.Object* value

Linked List-like Data Structures:
org.apache.derby.client.am.SqlException: [protected] nextException_
org.apache.derby.client.am.SqlWarning: [protected] nextWarning_
org.apache.derby.impl.sql.compile.SQLParser$JJCalls: next
org.apache.derby.impl.sql.compile.Token: [public] next
org.apache.derby.impl.store.raw.log.LogAccessFileBuffer: next/prev
org.apache.derby.impl.tools.ij.ij$JJCalls: next
org.apache.derby.impl.tools.ij.mtGrammar$JJCalls: next
org.apache.derby.impl.tools.ij.Token: [public] next

Parent- and outer-type Data Structures:
org.apache.derby.impl.jdbc.BinaryToRawStream: *java.lang.Object* [private] parent
org.apache.derby.impl.services.bytecode.Conditional: [private] [final] parent
org.apache.derby.impl.sql.compile.GroupByNode: *org.apache.derby.impl.sql.compile.FromTable* parent
org.apache.derby.impl.store.access.RAMTransaction: [protected] parent_tran

Whitelisted, probable data structures:


Others:
Exact Field Matches:
org.apache.derby.impl.drda.NetworkServerControlImpl: [private] serverInstance
org.apache.derby.impl.drda.NetworkServerControlImpl: [private] thisControl
org.apache.derby.impl.jdbc.EmbedConnection: [final] rootConnection
org.apache.derby.impl.sql.compile.Token: [public] specialToken
org.apache.derby.impl.store.access.sort.Node: [public] leftLink
org.apache.derby.impl.store.access.sort.Node: [public] rightLink
org.apache.derby.impl.store.access.sort.Node: [public] dupChain
org.apache.derby.impl.tools.ij.Token: [public] specialToken
Non-Object Fields:
org.apache.derby.iapi.services.io.CounterOutputStream: *java.io.OutputStream* [protected] out
org.apache.derby.iapi.services.io.LimitReader: *java.io.Reader* [private] reader
org.apache.derby.iapi.services.io.SQLExceptionWrapper: *java.lang.Exception* [private] myException
org.apache.derby.iapi.util.DoubleProperties: *java.util.Properties* [private] [final] read
org.apache.derby.iapi.util.DoubleProperties: *java.util.Properties* [private] [final] write
org.apache.derby.impl.drda.EXTDTAInputStream: *java.io.InputStream* [private] binaryInputStream
org.apache.derby.impl.jdbc.ClobUpdatableReader: *java.io.Reader* [private] streamReader
org.apache.derby.impl.jdbc.PositionedStoreStream: *java.io.InputStream* [private] [final] stream
org.apache.derby.impl.jdbc.UpdatableBlobStream: *java.io.InputStream* [private] stream
org.apache.derby.impl.sql.compile.BinaryListOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* receiver
org.apache.derby.impl.sql.compile.BinaryListOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* leftOperand
org.apache.derby.impl.sql.compile.BinaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* receiver
org.apache.derby.impl.sql.compile.BinaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* leftOperand
org.apache.derby.impl.sql.compile.BinaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* rightOperand
org.apache.derby.impl.sql.compile.CastNode: *org.apache.derby.impl.sql.compile.ValueNode* castOperand
org.apache.derby.impl.sql.compile.ConditionalNode: *org.apache.derby.impl.sql.compile.ValueNode* testCondition
org.apache.derby.impl.sql.compile.CreateTriggerNode: *org.apache.derby.impl.sql.compile.StatementNode* [private] actionNode
org.apache.derby.impl.sql.compile.DefaultNode: *org.apache.derby.impl.sql.compile.ValueNode* [private] defaultTree
org.apache.derby.impl.sql.compile.FromSubquery: *org.apache.derby.impl.sql.compile.ResultSetNode* subquery
org.apache.derby.impl.sql.compile.GenerationClauseNode: *org.apache.derby.impl.sql.compile.ValueNode* [private] _generationExpression
org.apache.derby.impl.sql.compile.GenerationClauseNode: *org.apache.derby.impl.sql.compile.ValueNode* [private] _boundExpression
org.apache.derby.impl.sql.compile.NonStaticMethodCallNode: *org.apache.derby.impl.sql.compile.JavaValueNode* receiver
org.apache.derby.impl.sql.compile.ParameterNode: *org.apache.derby.impl.sql.compile.ValueNode* [private] valToGenerate
org.apache.derby.impl.sql.compile.ResultColumn: *org.apache.derby.impl.sql.compile.ValueNode* expression
org.apache.derby.impl.sql.compile.SingleChildResultSetNode: *org.apache.derby.impl.sql.compile.ResultSetNode* childResult
org.apache.derby.impl.sql.compile.SubqueryNode: *org.apache.derby.impl.sql.compile.ValueNode* leftOperand
org.apache.derby.impl.sql.compile.TableOperatorNode: *org.apache.derby.impl.sql.compile.ResultSetNode* leftResultSet
org.apache.derby.impl.sql.compile.TableOperatorNode: *org.apache.derby.impl.sql.compile.ResultSetNode* rightResultSet
org.apache.derby.impl.sql.compile.TernaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* receiver
org.apache.derby.impl.sql.compile.TernaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* leftOperand
org.apache.derby.impl.sql.compile.TernaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* rightOperand
org.apache.derby.impl.sql.compile.UnaryOperatorNode: *org.apache.derby.impl.sql.compile.ValueNode* operand
org.apache.derby.impl.store.raw.data.DecryptInputStream: *java.io.InputStream* [protected] in
java.lang.Object Fields:
org.apache.derby.iapi.jdbc.DRDAServerStarter: *java.lang.Object* [private] server
org.apache.derby.iapi.services.diag.DiagnosticableGeneric: *java.lang.Object* [protected] diag_object
org.apache.derby.impl.db.BasicDatabase: *java.lang.Object* [protected] resourceAdapter
org.apache.derby.impl.drda.DRDAConnThread: *java.lang.Object* [private] timeSliceSync
org.apache.derby.impl.drda.DRDAConnThread: *java.lang.Object* [private] logConnectionsSync
org.apache.derby.impl.drda.DRDAConnThread: *java.lang.Object* [private] closeSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] traceDirectorySync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] traceAllSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] serverStartSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] logConnectionsSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] threadsSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] timeSliceSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] poolSync
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.lang.Object* [private] shutdownSync
org.apache.derby.impl.jdbc.EmbedResultSet: *java.lang.Object* [private] currentStream
org.apache.derby.impl.jdbc.StoreStreamClob: *java.lang.Object* [private] [final] synchronizationObject
org.apache.derby.impl.services.bytecode.VMTypeIdCacheable: *java.lang.Object* [private] descriptor
org.apache.derby.impl.services.locks.Lock: *java.lang.Object* [private] [final] qualifier
org.apache.derby.impl.services.locks.LockSpace: *java.lang.Object* [private] callbackGroup
org.apache.derby.impl.services.monitor.AntiGC: *java.lang.Object* [private] keep1
org.apache.derby.impl.services.monitor.ModuleInstance: *java.lang.Object* [protected] instance
org.apache.derby.impl.services.monitor.ModuleInstance: *java.lang.Object* [protected] topLevelService
org.apache.derby.impl.services.monitor.ModuleInstance: *java.lang.Object* [protected] service
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.lang.Object* [private] cursorInfo
org.apache.derby.impl.sql.compile.ExpressionClassBuilder: *java.lang.Object* [private] getDVF
org.apache.derby.impl.sql.compile.ExpressionClassBuilder: *java.lang.Object* [private] getRSF
org.apache.derby.impl.sql.compile.ExpressionClassBuilder: *java.lang.Object* [private] getEF
org.apache.derby.impl.sql.compile.ParserImpl: *java.lang.Object* [protected] cachedTokenManager
org.apache.derby.impl.sql.compile.PrivilegeNode: *java.lang.Object* [private] objectOfPrivilege
org.apache.derby.impl.sql.compile.WindowNode: *java.lang.Object* [private] frameDefinition
org.apache.derby.impl.sql.conn.CachedStatement: *java.lang.Object* [private] identity
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.lang.Object* [private] lastQueryTree
org.apache.derby.impl.store.raw.data.BaseDataFileFactory: *java.lang.Object* [private] freezeSemaphore
org.apache.derby.impl.store.raw.data.LongColumnException: *java.lang.Object* [protected] column
org.apache.derby.impl.store.raw.log.LogAccessFile: *java.lang.Object* [private] [final] logFileSemaphore
org.apache.derby.impl.store.raw.log.LogToFile: *java.lang.Object* [private] slaveRecoveryMonitor
org.apache.derby.impl.store.raw.xact.SavePoint: *java.lang.Object* [private] kindOfSavepoint
org.apache.derby.impl.store.raw.xact.XactFactory: *java.lang.Object* [private] backupSemaphore
org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer: *java.lang.Object* [private] [final] listLatch
org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer: *java.lang.Object* [private] [final] outputLatch
org.apache.derby.impl.store.replication.master.AsynchronousLogShipper: *java.lang.Object* [private] objLSTSync
org.apache.derby.impl.store.replication.master.AsynchronousLogShipper: *java.lang.Object* [private] forceFlushSemaphore
org.apache.derby.impl.store.replication.net.ReplicationMessage: *java.lang.Object* [private] message
org.apache.derby.impl.store.replication.net.ReplicationMessageReceive: *java.lang.Object* [private] [final] sendPingSemaphore
org.apache.derby.impl.store.replication.net.ReplicationMessageReceive: *java.lang.Object* [private] [final] receivePongSemaphore
org.apache.derby.impl.store.replication.net.ReplicationMessageTransmit: *java.lang.Object* [private] [final] receiveSemaphore
org.apache.derby.jdbc.InternalDriver: *java.lang.Object* [private] mbean

COLLECTIONS REPORT
==================

Whitelisted: Possible compound data structures
==
org.apache.derby.client.am.ByteArrayCombinerStream: *java.util.ArrayList* [private] [final] arrays
org.apache.derby.client.am.ColumnMetaData: *java.util.Hashtable* [public] protocolTypeToOverrideLidMapping_
org.apache.derby.client.am.ColumnMetaData: *java.util.ArrayList* [public] mddOverrideArray_
org.apache.derby.client.am.ColumnMetaData: *java.util.Hashtable* [private] columnNameToIndexCache_
org.apache.derby.client.am.Connection: *java.util.WeakHashMap* [final] openStatements_
org.apache.derby.client.am.Connection: *java.util.WeakHashMap* [final] CommitAndRollbackListeners_
org.apache.derby.client.am.Connection: *java.util.Hashtable* clientCursorNameCache_
org.apache.derby.client.am.Cursor: *java.util.ArrayList* [protected] columnDataPositionCache_
org.apache.derby.client.am.Cursor: *java.util.ArrayList* [protected] columnDataLengthCache_
org.apache.derby.client.am.Cursor: *java.util.ArrayList* [protected] columnDataIsNullCache_
org.apache.derby.client.am.Cursor: *java.util.ArrayList* [public] isUpdateDeleteHoleCache_
org.apache.derby.client.am.EncryptionManager: *java.security.Provider* [private] provider
org.apache.derby.client.am.GetSystemPropertiesAction: *java.util.Properties* [private] systemProperties_
org.apache.derby.client.am.PreparedStatement: *java.util.ArrayList* [private] parameterTypeList
org.apache.derby.client.am.SectionManager: *java.util.Stack* freeSectionsNonHold_
org.apache.derby.client.am.SectionManager: *java.util.Stack* freeSectionsHold_
org.apache.derby.client.am.SectionManager: *java.util.Hashtable* [private] positionedUpdateCursorNameToQuerySection_
org.apache.derby.client.am.SectionManager: *java.util.Hashtable* [private] positionedUpdateCursorNameToResultSet_
org.apache.derby.client.am.Statement: *java.util.ArrayList* [protected] timeoutArrayList
org.apache.derby.client.am.Statement: *java.util.ArrayList* [final] batch_
org.apache.derby.client.am.StatementCacheInteractor: *java.util.ArrayList* [private] [final] openLogicalStatements
org.apache.derby.client.am.stmtcache.JDBCStatementCache: *java.util.LinkedHashMap* [private] [final] statements
org.apache.derby.client.ClientPooledConnection: *java.util.ArrayList* [private] listeners_
org.apache.derby.client.net.NetConnection: *java.util.Hashtable* [protected] indoubtTransactions_
org.apache.derby.client.net.NetCursor: *java.util.HashMap* extdtaPositions_
org.apache.derby.client.net.NetCursor: *java.util.ArrayList* extdtaData_
org.apache.derby.client.net.NetStatementRequest: *java.util.ArrayList* extdtaPositions_
org.apache.derby.client.net.NetStatementRequest: *java.util.HashMap* promototedParameters_
org.apache.derby.client.net.NetXAResource: *java.util.List* [private] specialRegisters_
org.apache.derby.diag.ErrorMessages: *java.util.Properties* [private] p
org.apache.derby.diag.LockTable: *java.util.Hashtable* [private] currentRow
org.apache.derby.diag.StatementCache: *java.util.Vector* [private] data
org.apache.derby.diag.StatementDuration: *java.util.Hashtable* [private] hashTable
org.apache.derby.iapi.jdbc.JDBCBoot: *java.util.Properties* [private] bootProperties
org.apache.derby.iapi.services.classfile.ClassEnumeration: *java.util.HashSet* foundClasses
org.apache.derby.iapi.services.classfile.ClassHolder: *org.apache.derby.iapi.services.classfile.Attributes* [protected] attribute_info
org.apache.derby.iapi.services.classfile.ClassHolder: *java.util.Hashtable* [protected] cptHashTable
org.apache.derby.iapi.services.classfile.ClassHolder: *java.util.Vector* [protected] cptEntries
org.apache.derby.iapi.services.classfile.ClassMember: *org.apache.derby.iapi.services.classfile.Attributes* [protected] attribute_info
org.apache.derby.iapi.services.classfile.MemberTable: *java.util.Vector* [protected] entries
org.apache.derby.iapi.services.classfile.MemberTable: *java.util.Hashtable* [private] hashtable
org.apache.derby.iapi.services.context.ContextManager: *java.util.HashMap* [private] [final] ctxTable
org.apache.derby.iapi.services.context.ContextManager: *java.util.ArrayList* [private] [final] holder
org.apache.derby.iapi.services.context.ContextManager$CtxStack: *java.util.ArrayList* [private] [final] stack_
org.apache.derby.iapi.services.context.ContextManager$CtxStack: *java.util.List* [private] [final] view_
org.apache.derby.iapi.services.context.ContextService: *java.util.HashSet* [private] allContexts
org.apache.derby.iapi.services.property.PropertyValidation: *java.util.Vector* [private] notifyOnSet
org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor: *org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList* [private] colDL
org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor: *org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList* [private] fkEnabledConstraintList
org.apache.derby.iapi.sql.dictionary.ReferencedKeyConstraintDescriptor: *org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList* [private] fkConstraintList
org.apache.derby.iapi.sql.dictionary.TableDescriptor: *org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList* columnDescriptorList
org.apache.derby.iapi.sql.dictionary.TableDescriptor: *org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptorList* conglomerateDescriptorList
org.apache.derby.iapi.sql.dictionary.TableDescriptor: *org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList* constraintDescriptorList
org.apache.derby.iapi.sql.dictionary.TableDescriptor: *org.apache.derby.iapi.sql.dictionary.GenericDescriptorList* [private] triggerDescriptorList
org.apache.derby.iapi.sql.dictionary.TableDescriptor: *java.util.List* [private] statisticsDescriptorList
org.apache.derby.iapi.store.access.BackingStoreHashtable: *java.util.HashMap* [private] hash_table
org.apache.derby.iapi.store.access.BackingStoreHashtable: *java.util.Properties* [private] auxillary_runtimestats
org.apache.derby.iapi.util.DoubleProperties: *java.util.Properties* [private] [final] read
org.apache.derby.iapi.util.DoubleProperties: *java.util.Properties* [private] [final] write
org.apache.derby.impl.db.SlaveDatabase$SlaveDatabaseBootThread: *java.util.Properties* [private] params
org.apache.derby.impl.drda.Database: *java.util.Hashtable* [private] stmtTable
org.apache.derby.impl.drda.DRDAConnThread: *java.util.Vector* [private] unknownManagers
org.apache.derby.impl.drda.DRDAConnThread: *java.util.Vector* [private] knownManagers
org.apache.derby.impl.drda.DRDAConnThread: *java.util.Vector* [private] errorManagers
org.apache.derby.impl.drda.DRDAConnThread: *java.util.Vector* [private] errorManagersLevel
org.apache.derby.impl.drda.DRDAResultSet: *java.util.ArrayList* [private] extDtaObjects
org.apache.derby.impl.drda.DRDAResultSet: *java.util.ArrayList* [private] rsExtPositions
org.apache.derby.impl.drda.DRDAStatement: *java.util.Hashtable* [private] resultSetTable
org.apache.derby.impl.drda.DRDAStatement: *java.util.ArrayList* [private] resultSetKeyList
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.util.Vector* [private] commandArgs
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.util.ArrayList* localAddresses
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.util.Hashtable* [private] sessionTable
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.util.Vector* [private] threadList
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.util.Vector* [private] runQueue
org.apache.derby.impl.drda.NetworkServerControlImpl: *java.util.Hashtable* [private] appRequesterTable
org.apache.derby.impl.drda.Session: *java.util.Hashtable* [private] dbtable
org.apache.derby.impl.io.vfmem.DataStore: *java.util.Map* [private] [final] files
org.apache.derby.impl.jdbc.authentication.JNDIAuthenticationSchemeBase: *java.util.Properties* [protected] initDirContextEnv
org.apache.derby.impl.jdbc.authentication.LDAPAuthenticationSchemeImpl$1: *java.util.Properties* [private] [final] val$env
org.apache.derby.impl.jdbc.EmbedConnection: *java.util.HashMap* [private] lobHashMap
org.apache.derby.impl.jdbc.EmbedConnection: *java.util.WeakHashMap* [private] lobReferences
org.apache.derby.impl.jdbc.EmbedConnection: *java.util.HashSet* [private] lobFiles
org.apache.derby.impl.jdbc.EmbedStatement: *java.util.Vector* batchStatements
org.apache.derby.impl.load.ColumnInfo: *java.util.ArrayList* [private] vtiColumnNames
org.apache.derby.impl.load.ColumnInfo: *java.util.ArrayList* [private] insertColumnNames
org.apache.derby.impl.load.ColumnInfo: *java.util.ArrayList* [private] columnTypes
org.apache.derby.impl.load.ColumnInfo: *java.util.ArrayList* [private] jdbcColumnTypes
org.apache.derby.impl.load.ColumnInfo: *java.util.ArrayList* [private] columnPositions
org.apache.derby.impl.load.ControlInfo: *java.util.Properties* [private] currentProperties
org.apache.derby.impl.services.bytecode.BCMethod: *java.util.Vector* thrownExceptions
org.apache.derby.impl.services.cache.Clock: *java.util.HashMap* [private] [final] cache_
org.apache.derby.impl.services.cache.Clock: *java.util.ArrayList* [private] [final] holders
org.apache.derby.impl.services.cache.ConcurrentCache: *java.util.concurrent.ConcurrentHashMap* [private] [final] cache [Ljava/util/concurrent/ConcurrentHashMap<Ljava/lang/Object;Lorg/apache/derby/impl/services/cache/CacheEntry;>;]
org.apache.derby.impl.services.daemon.BasicDaemon: *java.util.Vector* [private] [final] subscription
org.apache.derby.impl.services.daemon.BasicDaemon: *java.util.List* [private] [final] highPQ
org.apache.derby.impl.services.daemon.BasicDaemon: *java.util.List* [private] [final] normPQ
org.apache.derby.impl.services.jce.JCECipherFactory: *java.util.Properties* [private] persistentProperties
org.apache.derby.impl.services.locks.LockControl: *java.util.List* [private] granted
org.apache.derby.impl.services.locks.LockControl: *java.util.List* [private] waiting
org.apache.derby.impl.services.locks.LockSet: *java.util.HashMap* [private] [final] locks
org.apache.derby.impl.services.locks.LockSpace: *java.util.HashMap* [private] [final] groups
org.apache.derby.impl.services.locks.TableNameInfo: *java.util.Hashtable* [private] ddCache
org.apache.derby.impl.services.locks.TableNameInfo: *java.util.Hashtable* [private] tdCache
org.apache.derby.impl.services.locks.TableNameInfo: *java.util.Hashtable* [private] tableCache
org.apache.derby.impl.services.locks.TableNameInfo: *java.util.Hashtable* [private] indexCache
org.apache.derby.impl.services.locks.Timeout: *java.util.Hashtable* [private] currentRow
org.apache.derby.impl.services.monitor.BaseMonitor: *java.util.HashMap* [private] serviceProviders
org.apache.derby.impl.services.monitor.BaseMonitor: *java.util.Vector* [private] services
org.apache.derby.impl.services.monitor.BaseMonitor: *java.util.Properties* bootProperties
org.apache.derby.impl.services.monitor.BaseMonitor: *java.util.Properties* applicationProperties
org.apache.derby.impl.services.monitor.BaseMonitor$ProviderEnumeration: *java.util.Properties* [private] startParams
org.apache.derby.impl.services.monitor.StorageFactoryService$4: *java.util.Properties* [private] [final] val$serviceProperties
org.apache.derby.impl.services.monitor.StorageFactoryService$5: *java.util.Properties* [private] [final] val$properties
org.apache.derby.impl.services.monitor.StorageFactoryService$6: *java.util.Properties* [private] [final] val$properties
org.apache.derby.impl.services.monitor.TopService: *java.util.Hashtable* protocolTable
org.apache.derby.impl.services.monitor.TopService: *java.util.Vector* moduleInstances
org.apache.derby.impl.services.reflect.ReflectClassesJava2: *java.util.HashMap* [private] preCompiled
org.apache.derby.impl.services.reflect.ReflectGeneratedClass: *java.util.Hashtable* [private] [final] methodCache
org.apache.derby.impl.sql.catalog.DataDictionaryImpl: *java.util.Properties* startupParameters
org.apache.derby.impl.sql.catalog.DataDictionaryImpl: *java.util.Hashtable* [private] spsIdHash
org.apache.derby.impl.sql.catalog.RoleClosureIteratorImpl: *java.util.HashMap* [private] seenSoFar
org.apache.derby.impl.sql.catalog.RoleClosureIteratorImpl: *java.util.HashMap* [private] graph
org.apache.derby.impl.sql.catalog.RoleClosureIteratorImpl: *java.util.List* [private] lifo
org.apache.derby.impl.sql.compile.CollectNodesVisitor: *java.util.Vector* [private] nodeList
org.apache.derby.impl.sql.compile.ColumnOrdering: *java.util.Vector* columns
org.apache.derby.impl.sql.compile.ColumnOrdering: *java.util.Vector* tables
org.apache.derby.impl.sql.compile.ColumnReference: *java.util.ArrayList* [private] remaps
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.Vector* [private] savedObjects
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.ArrayList* [private] defaultSchemaStack
org.apache.derby.impl.sql.compile.CompilerContextImpl: *org.apache.derby.iapi.sql.depend.ProviderList* [private] currentAPL
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.Vector* [private] storeCostControllers
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.Vector* [private] storeCostConglomIds
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.Vector* [private] parameterList
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.Stack* [private] privTypeStack
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.HashMap* [private] requiredColumnPrivileges
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.HashMap* [private] requiredTablePrivileges
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.HashMap* [private] requiredSchemaPrivileges
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.HashMap* [private] requiredRoutinePrivileges
org.apache.derby.impl.sql.compile.CompilerContextImpl: *java.util.HashMap* [private] requiredRolePrivileges
org.apache.derby.impl.sql.compile.ConstraintDefinitionNode: *java.util.Properties* [protected] properties
org.apache.derby.impl.sql.compile.ConstraintDefinitionNode: *org.apache.derby.iapi.sql.depend.ProviderList* apl
org.apache.derby.impl.sql.compile.CreateIndexNode: *java.util.Properties* properties
org.apache.derby.impl.sql.compile.CreateIndexNode: *java.util.Vector* columnNameList
org.apache.derby.impl.sql.compile.CreateTableNode: *java.util.Properties* [private] properties
org.apache.derby.impl.sql.compile.CreateTriggerNode: *java.util.Vector* [private] refClause
org.apache.derby.impl.sql.compile.CursorNode: *java.util.Vector* [private] updatableColumns
org.apache.derby.impl.sql.compile.DMLModStatementNode: *org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList* [protected] relevantCdl
org.apache.derby.impl.sql.compile.DMLModStatementNode: *org.apache.derby.iapi.sql.dictionary.GenericDescriptorList* [protected] relevantTriggers
org.apache.derby.impl.sql.compile.DMLModStatementNode: *java.util.Hashtable* [protected] graphHashTable
org.apache.derby.impl.sql.compile.FromList: *java.util.Properties* properties
org.apache.derby.impl.sql.compile.FromTable: *java.util.Properties* tableProperties
org.apache.derby.impl.sql.compile.FromTable: *java.util.HashMap* [private] bestPlanMap
org.apache.derby.impl.sql.compile.FromVTI: *org.apache.derby.iapi.services.io.FormatableHashtable* [private] compileTimeConstants
org.apache.derby.impl.sql.compile.GenerationClauseNode: *org.apache.derby.iapi.sql.depend.ProviderList* [private] _apl
org.apache.derby.impl.sql.compile.GrantNode: *java.util.List* [private] grantees
org.apache.derby.impl.sql.compile.GrantRoleNode: *java.util.List* [private] roles
org.apache.derby.impl.sql.compile.GrantRoleNode: *java.util.List* [private] grantees
org.apache.derby.impl.sql.compile.GroupByNode: *java.util.Vector* aggregateVector
org.apache.derby.impl.sql.compile.GroupByNode: *org.apache.derby.impl.sql.execute.AggregatorInfoList* [private] aggInfo
org.apache.derby.impl.sql.compile.InsertNode: *java.util.Properties* [public] targetProperties
org.apache.derby.impl.sql.compile.JoinNode: *java.util.Vector* aggregateVector
org.apache.derby.impl.sql.compile.JoinNode: *java.util.Properties* joinOrderStrategyProperties
org.apache.derby.impl.sql.compile.OptimizerImpl: *java.util.HashMap* [private] savedJoinOrders
org.apache.derby.impl.sql.compile.Predicate: *java.util.Hashtable* [private] searchClauseHT
org.apache.derby.impl.sql.compile.PredicateList$PredicateWrapperList: *java.util.Vector* pwList
org.apache.derby.impl.sql.compile.QueryTreeNodeVector: *java.util.Vector* [private] v
org.apache.derby.impl.sql.compile.RevokeNode: *java.util.List* [private] grantees
org.apache.derby.impl.sql.compile.RevokeRoleNode: *java.util.List* [private] roles
org.apache.derby.impl.sql.compile.RevokeRoleNode: *java.util.List* [private] grantees
org.apache.derby.impl.sql.compile.RoutineDesignator: *java.util.List* paramTypeList
org.apache.derby.impl.sql.compile.RowOrderingImpl: *java.util.Vector* ordering
org.apache.derby.impl.sql.compile.RowOrderingImpl: *java.util.Vector* alwaysOrderedOptimizables
org.apache.derby.impl.sql.compile.RowOrderingImpl: *java.util.Vector* unorderedOptimizables
org.apache.derby.impl.sql.compile.RowResultSetNode: *java.util.Vector* aggregateVector
org.apache.derby.impl.sql.compile.SelectNode: *java.util.Vector* selectAggregates
org.apache.derby.impl.sql.compile.SelectNode: *java.util.Vector* whereAggregates
org.apache.derby.impl.sql.compile.SelectNode: *java.util.Vector* havingAggregates
org.apache.derby.impl.sql.compile.SetOperatorNode: *java.util.HashMap* [private] leftScopedPreds
org.apache.derby.impl.sql.compile.SetOperatorNode: *java.util.HashMap* [private] rightScopedPreds
org.apache.derby.impl.sql.compile.SQLParser: *java.util.Vector* [private] parameterList
org.apache.derby.impl.sql.compile.SQLParser: *java.util.Vector* explicitlyNullableColumnsList
org.apache.derby.impl.sql.compile.SQLParser: *java.util.Vector* [private] jj_expentries
org.apache.derby.impl.sql.compile.TablePrivilegesNode: *java.util.List* [private] descriptorList
org.apache.derby.impl.sql.compile.VTIDeferModPolicy: *java.util.Hashtable* [private] columns
org.apache.derby.impl.sql.compile.WindowNode: *java.util.Properties* [private] tableProperties
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.ArrayList* [private] [final] acts
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.ArrayList* [private] allDeclaredGlobalTempTables
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.ArrayList* [private] stmtValidators
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.ArrayList* [private] triggerExecutionContexts
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.ArrayList* [private] triggerTables
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.HashMap* [private] autoincrementHT
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *java.util.HashMap* [private] autoincrementCacheHashtable
org.apache.derby.impl.sql.conn.GenericStatementContext: *java.util.ArrayList* [private] dependencies
org.apache.derby.impl.sql.depend.BasicDependencyManager: *java.util.Hashtable* [private] [final] dependents
org.apache.derby.impl.sql.depend.BasicDependencyManager: *java.util.Hashtable* [private] [final] providers
org.apache.derby.impl.sql.execute.BaseActivation: *java.util.HashSet* [private] rowCountsCheckedThisExecution
org.apache.derby.impl.sql.execute.BaseActivation: *java.util.Hashtable* [protected] parentResultSets
org.apache.derby.impl.sql.execute.BasicSortObserver: *java.util.Vector* [private] vector
org.apache.derby.impl.sql.execute.CreateIndexConstantAction: *java.util.Properties* [private] properties
org.apache.derby.impl.sql.execute.CreateTableConstantAction: *java.util.Properties* [private] properties
org.apache.derby.impl.sql.execute.DependentResultSet: *java.util.Vector* sVector
org.apache.derby.impl.sql.execute.DependentResultSet: *java.util.Properties* [private] scanProperties
org.apache.derby.impl.sql.execute.GenericAggregateResultSet: *org.apache.derby.impl.sql.execute.AggregatorInfoList* [protected] aggInfoList
org.apache.derby.impl.sql.execute.GenericRIChecker: *java.util.Hashtable* [private] scanControllers
org.apache.derby.impl.sql.execute.GrantRevokeConstantAction: *java.util.List* [private] grantees
org.apache.derby.impl.sql.execute.GrantRoleConstantAction: *java.util.List* [private] roleNames
org.apache.derby.impl.sql.execute.GrantRoleConstantAction: *java.util.List* [private] grantees
org.apache.derby.impl.sql.execute.GroupedAggregateResultSet: *java.util.Properties* [public] sortProperties
org.apache.derby.impl.sql.execute.HashScanResultSet: *java.util.List* [private] entryVector
org.apache.derby.impl.sql.execute.HashScanResultSet: *java.util.Properties* [public] scanProperties
org.apache.derby.impl.sql.execute.HashTableResultSet: *java.util.Properties* [public] scanProperties
org.apache.derby.impl.sql.execute.HashTableResultSet: *java.util.List* [private] entryVector
org.apache.derby.impl.sql.execute.InsertResultSet: *java.util.Hashtable* [private] indexConversionTable
org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext: *java.util.Vector* [private] resultSetVector
org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext: *java.util.Vector* [private] aiCounters
org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext: *java.util.Hashtable* [private] aiHT
org.apache.derby.impl.sql.execute.RevokeRoleConstantAction: *java.util.List* [private] roleNames
org.apache.derby.impl.sql.execute.RevokeRoleConstantAction: *java.util.List* [private] grantees
org.apache.derby.impl.sql.execute.rts.RealGroupedAggregateStatistics: *java.util.Properties* [public] sortProperties
org.apache.derby.impl.sql.execute.rts.RealHashScanStatistics: *org.apache.derby.iapi.services.io.FormatableProperties* [public] scanProperties
org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics: *org.apache.derby.iapi.services.io.FormatableProperties* [public] scanProperties
org.apache.derby.impl.sql.execute.rts.RealSortStatistics: *org.apache.derby.iapi.services.io.FormatableProperties* [public] sortProperties
org.apache.derby.impl.sql.execute.rts.RealTableScanStatistics: *org.apache.derby.iapi.services.io.FormatableProperties* [public] scanProperties
org.apache.derby.impl.sql.execute.SetConstraintsConstantAction: *org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList* [private] cdl
org.apache.derby.impl.sql.execute.SortResultSet: *java.util.Properties* [public] sortProperties
org.apache.derby.impl.sql.execute.TablePrivilegeInfo: *java.util.List* [private] descriptorList
org.apache.derby.impl.sql.execute.TableScanResultSet: *java.util.Properties* [private] scanProperties
org.apache.derby.impl.sql.execute.TableScanResultSet: *java.util.Hashtable* [protected] past2FutureTbl
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl: *java.util.Properties* [private] properties
org.apache.derby.impl.sql.execute.TriggerEventActivator: *java.util.Vector* [private] aiCounters
org.apache.derby.impl.sql.execute.VTIResultSet: *org.apache.derby.iapi.services.io.FormatableHashtable* [private] compileTimeConstants
org.apache.derby.impl.sql.execute.WriteCursorConstantAction: *java.util.Properties* [private] targetProperties
org.apache.derby.impl.sql.GenericPreparedStatement: *java.util.List* [protected] requiredPermissionsList
org.apache.derby.impl.sql.GenericResultDescription: *java.util.Map* [private] columnNameMap
org.apache.derby.impl.store.access.PropertyConglomerate: *java.util.Properties* [protected] serviceProperties
org.apache.derby.impl.store.access.RAMAccessManager: *java.util.Hashtable* [private] implhash
org.apache.derby.impl.store.access.RAMAccessManager: *java.util.Hashtable* [private] formathash
org.apache.derby.impl.store.access.RAMAccessManager: *java.util.Properties* [private] serviceProperties
org.apache.derby.impl.store.access.RAMTransaction: *java.util.ArrayList* [private] scanControllers
org.apache.derby.impl.store.access.RAMTransaction: *java.util.ArrayList* [private] conglomerateControllers
org.apache.derby.impl.store.access.RAMTransaction: *java.util.ArrayList* [private] sorts
org.apache.derby.impl.store.access.RAMTransaction: *java.util.ArrayList* [private] sortControllers
org.apache.derby.impl.store.access.RAMTransaction: *java.util.ArrayList* [private] freeSortIds
org.apache.derby.impl.store.access.RAMTransaction: *java.util.HashMap* [protected] tempCongloms
org.apache.derby.impl.store.access.sort.MergeInserter: *java.util.Vector* [private] mergeRuns
org.apache.derby.impl.store.access.sort.MergeInserter: *java.util.Vector* stat_mergeRunsSize
org.apache.derby.impl.store.access.sort.MergeScan: *java.util.Vector* [protected] mergeRuns
org.apache.derby.impl.store.access.sort.MergeSort: *java.util.Vector* [private] mergeRuns
org.apache.derby.impl.store.access.sort.MergeSortInfo: *java.util.Vector* [private] stat_mergeRunsSize
org.apache.derby.impl.store.raw.data.BaseDataFileFactory: *java.util.Hashtable* [private] droppedTableStubInfo
org.apache.derby.impl.store.raw.data.BaseDataFileFactory: *java.util.Hashtable* [private] postRecoveryRemovedFiles
org.apache.derby.impl.store.raw.data.MemByteHolder: *java.util.Vector* bufV
org.apache.derby.impl.store.raw.log.LogAccessFile: *java.util.LinkedList* [private] freeBuffers
org.apache.derby.impl.store.raw.log.LogAccessFile: *java.util.LinkedList* [private] dirtyBuffers
org.apache.derby.impl.store.raw.xact.TransactionTable: *java.util.Hashtable* [private] trans
org.apache.derby.impl.store.raw.xact.Xact: *java.util.Stack* [private] savePoints
org.apache.derby.impl.store.raw.xact.Xact: *java.util.List* [protected] postCommitWorks
org.apache.derby.impl.store.raw.xact.Xact: *java.util.List* [protected] postTerminationWorks
org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer: *java.util.LinkedList* [private] [final] dirtyBuffers
org.apache.derby.impl.store.replication.buffer.ReplicationLogBuffer: *java.util.LinkedList* [private] [final] freeBuffers
org.apache.derby.impl.tools.ij.AttributeHolder: *java.util.Vector* errors
org.apache.derby.impl.tools.ij.ConnectionEnv: *java.util.Hashtable* sessions
org.apache.derby.impl.tools.ij.ij: *java.util.Hashtable* ignoreErrors
org.apache.derby.impl.tools.ij.ij: *java.util.Hashtable* namedProtocols
org.apache.derby.impl.tools.ij.ij: *java.util.Vector* [private] jj_expentries
org.apache.derby.impl.tools.ij.ijMultipleResultSetResult: *java.util.List* resultSets
org.apache.derby.impl.tools.ij.ijVectorResult: *java.util.Vector* vec
org.apache.derby.impl.tools.ij.mtGrammar: *java.util.Vector* [private] jj_expentries
org.apache.derby.impl.tools.ij.mtTestCase: *java.util.Hashtable* [public] ignoreErrors
org.apache.derby.impl.tools.ij.mtTestSuite: *java.util.Vector* [private] cases
org.apache.derby.impl.tools.ij.mtTestSuite: *java.util.Vector* [private] last
org.apache.derby.impl.tools.ij.mtTestSuite: *java.util.Vector* [private] init
org.apache.derby.impl.tools.ij.Session: *java.util.Hashtable* prepStmts
org.apache.derby.impl.tools.ij.Session: *java.util.Hashtable* cursorStmts
org.apache.derby.impl.tools.ij.Session: *java.util.Hashtable* cursors
org.apache.derby.impl.tools.ij.Session: *java.util.Hashtable* asyncStmts
org.apache.derby.impl.tools.ij.URLCheck: *java.util.Vector* [public] attributes
org.apache.derby.impl.tools.ij.URLCheck: *java.util.Vector* validProps
org.apache.derby.impl.tools.ij.utilMain: *java.util.Hashtable* [private] ignoreErrors
org.apache.derby.impl.tools.ij.utilMain: *java.util.Stack* oldGrabbers
org.apache.derby.impl.tools.sysinfo.Main$3: *java.util.Properties* [private] [final] val$finalp
org.apache.derby.jdbc.EmbedPooledConnection: *java.util.ArrayList* [private] eventListener
org.apache.derby.jdbc.ResourceAdapterImpl: *java.util.Hashtable* [private] connectionTable
org.apache.derby.jdbc.XATransactionState: *java.util.HashMap* suspendedList
org.apache.derby.tools.SignatureChecker: *java.util.ArrayList* [private] _procedures
org.apache.derby.tools.SignatureChecker: *java.util.ArrayList* [private] _functions
org.apache.derby.tools.SignatureChecker$SQLRoutine: *java.util.ArrayList* [private] _argList

ARRAYS REPORT
=============

org.apache.derby.catalog.types.DefaultInfoImpl: *java.lang.String[]* [private] referencedColumnNames
org.apache.derby.catalog.types.RoutineAliasInfo: *org.apache.derby.catalog.TypeDescriptor[]* [private] parameterTypes
org.apache.derby.catalog.types.RoutineAliasInfo: *java.lang.String[]* [private] parameterNames
org.apache.derby.catalog.types.RowMultiSetImpl: *java.lang.String[]* [private] _columnNames
org.apache.derby.catalog.types.RowMultiSetImpl: *org.apache.derby.catalog.TypeDescriptor[]* [private] _types
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlName_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlLabel_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlComment_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlxCorname_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlxName_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlxBasename_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlxSchema_
org.apache.derby.client.am.ColumnMetaData: *java.lang.String[]* [public] sqlxRdbnam_
org.apache.derby.client.am.Cursor: *java.lang.String[]* [public] charsetName_ [no-stores] [arraycopy]
org.apache.derby.client.am.DatabaseMetaData: *java.lang.Object[]* [private] metaDataInfoCache_
org.apache.derby.client.am.PreparedStatement: *java.lang.Object[]* [public] parameters_ [arraycopy]
org.apache.derby.client.am.ResultSet: *org.apache.derby.client.am.Sqlca[]* [public] rowsetSqlca_ [arraycopy]
org.apache.derby.client.am.ResultSet: *java.lang.Object[]* [private] updatedColumns_ [arraycopy]
org.apache.derby.client.am.Sqlca: *java.lang.String[]* [protected] sqlErrmcMessages_
org.apache.derby.client.am.Sqlca: *java.lang.String[]* [private] sqlStates_
org.apache.derby.client.am.Sqlca: *java.lang.String[]* [private] cachedMessages
org.apache.derby.client.am.Statement: *org.apache.derby.client.am.ResultSet[]* resultSetList_
org.apache.derby.client.am.Statement: *java.lang.String[]* [public] generatedKeysColumnNames_
org.apache.derby.client.net.NetXAResource: *org.apache.derby.client.net.NetXACallInfo[]* callInfoArray_
org.apache.derby.client.net.Typdef: *org.apache.derby.client.net.FdocaSimpleDataArray[]* [private] overrideTable_ [mod]
org.apache.derby.diag.SpaceTable: *org.apache.derby.diag.ConglomInfo[]* [private] conglomTable
org.apache.derby.diag.StatementDuration: *java.lang.String[]* [private] currentRow
org.apache.derby.diag.TransactionTable: *org.apache.derby.iapi.store.access.TransactionInfo[]* [private] transactionTable
org.apache.derby.drda.NetServlet: *java.lang.String[]* [private] knownLang
org.apache.derby.iapi.error.StandardException: *java.lang.Object[]* [private] arguments
org.apache.derby.iapi.services.io.FormatableArrayHolder: *java.lang.Object[]* [private] array
org.apache.derby.iapi.sql.dictionary.CatalogRowFactory: *java.lang.String[]* [protected] indexNames
org.apache.derby.iapi.sql.dictionary.CatalogRowFactory: *org.apache.derby.catalog.UUID[]* [protected] indexUUID
org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor: *java.lang.String[]* [private] columnNames [no-stores]
org.apache.derby.iapi.sql.dictionary.IndexLister: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* [private] indexRowGenerators
org.apache.derby.iapi.sql.dictionary.IndexLister: *java.lang.String[]* [private] indexNames
org.apache.derby.iapi.sql.dictionary.IndexLister: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* [private] distinctIndexRowGenerators
org.apache.derby.iapi.sql.dictionary.IndexLister: *java.lang.String[]* [private] distinctIndexNames
org.apache.derby.iapi.sql.dictionary.SPSDescriptor: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [private] params
org.apache.derby.iapi.sql.dictionary.SPSDescriptor: *java.lang.Object[]* [private] paramDefaults
org.apache.derby.iapi.store.access.DiskHashtable: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] [final] btreeRow [hashcode]
org.apache.derby.iapi.store.access.DiskHashtable: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] [final] row [hashcode]
org.apache.derby.iapi.store.access.DiskHashtable: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] [final] scanKey [hashcode]
org.apache.derby.iapi.store.access.KeyHasher: *java.lang.Object[]* [private] [final] objects [hashcode]
org.apache.derby.iapi.store.raw.FetchDescriptor: *org.apache.derby.iapi.store.access.Qualifier[][]* [private] qualifier_list [no-stores] [arraycopy]
org.apache.derby.impl.drda.DRDAProtocolException: *java.lang.Object[]* [private] messageArgs
org.apache.derby.impl.jdbc.EmbedParameterSetMetaData: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [private] [final] types [no-stores]
org.apache.derby.impl.jdbc.EmbedResultSetMetaData: *org.apache.derby.iapi.sql.ResultColumnDescriptor[]* [private] [final] columnInfo [no-stores]
org.apache.derby.impl.jdbc.EmbedSQLException: *java.lang.Object[]* [private] arguments [no-stores]
org.apache.derby.impl.jdbc.EmbedStatement: *org.apache.derby.impl.jdbc.EmbedResultSet[]* [private] dynamicResults
org.apache.derby.impl.load.ExportResultSetForObject: *java.lang.String[]* [private] columnNames
org.apache.derby.impl.load.ExportResultSetForObject: *java.lang.String[]* [private] columnTypes
org.apache.derby.impl.load.ImportAbstract: *java.lang.String[]* columnNames
org.apache.derby.impl.load.ImportAbstract: *java.lang.String[]* nextRow
org.apache.derby.impl.load.ImportReadData: *java.lang.String[]* [protected] columnTypes [arraycopy]
org.apache.derby.impl.load.ImportReadData: *org.apache.derby.impl.load.ImportLobFile[]* [private] lobFileHandles [arraycopy]
org.apache.derby.impl.load.ImportResultSetMetaData: *java.lang.String[]* [private] [final] columnNames [no-stores]
org.apache.derby.impl.services.bytecode.BCMethod: *org.apache.derby.impl.services.bytecode.BCLocalField[]* parameters [arraycopy]
org.apache.derby.impl.services.bytecode.BCMethod: *java.lang.String[]* [private] [final] parameterTypes [arraycopy]
org.apache.derby.impl.services.bytecode.BCMethod: *org.apache.derby.impl.services.bytecode.Type[]* [private] stackTypes [arraycopy]
org.apache.derby.impl.services.bytecode.BCMethodDescriptor: *java.lang.String[]* [private] [final] vmParameterTypes [no-stores] [hashcode]
org.apache.derby.impl.services.bytecode.Conditional: *org.apache.derby.impl.services.bytecode.Type[]* [private] stack [no-stores]
org.apache.derby.impl.services.locks.LockSpace: *java.util.HashMap[]* [private] spareGroups
org.apache.derby.impl.services.monitor.BaseMonitor: *java.util.Vector[]* implementationSets
org.apache.derby.impl.services.monitor.BaseMonitor: *org.apache.derby.iapi.services.loader.InstanceGetter[]* [private] rc2
org.apache.derby.impl.services.monitor.StorageFactoryService$DirectoryList: *java.lang.String[]* [private] contents
org.apache.derby.impl.services.reflect.JarLoader: *java.lang.String[]* [private] [final] name [no-stores]
org.apache.derby.impl.services.reflect.UpdateLoader: *org.apache.derby.impl.services.reflect.JarLoader[]* [private] jarList
org.apache.derby.impl.services.reflect.UpdateLoader$1: *java.lang.String[][]* [private] [final] val$elements
org.apache.derby.impl.sql.catalog.DataDictionaryImpl: *org.apache.derby.impl.sql.catalog.TabInfoImpl[]* [private] coreInfo
org.apache.derby.impl.sql.catalog.DataDictionaryImpl: *org.apache.derby.impl.sql.catalog.TabInfoImpl[]* [private] noncoreInfo
org.apache.derby.impl.sql.catalog.DataDictionaryImpl: *java.lang.String[][]* [private] DIAG_VTI_TABLE_CLASSES
org.apache.derby.impl.sql.catalog.DataDictionaryImpl: *java.lang.String[][]* [private] DIAG_VTI_TABLE_FUNCTION_CLASSES
org.apache.derby.impl.sql.catalog.TabInfoImpl: *org.apache.derby.impl.sql.catalog.IndexInfoImpl[]* [private] indexes
org.apache.derby.impl.sql.compile.AlterTableNode: *org.apache.derby.impl.sql.execute.ColumnInfo[]* [protected] colInfos [no-stores]
org.apache.derby.impl.sql.compile.AlterTableNode: *org.apache.derby.impl.sql.execute.ConstraintConstantAction[]* [protected] conActions [no-stores]
org.apache.derby.impl.sql.compile.CompilerContextImpl: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [private] parameterDescriptors [no-stores]
org.apache.derby.impl.sql.compile.CreateIndexNode: *java.lang.String[]* columnNames
org.apache.derby.impl.sql.compile.CreateViewNode: *org.apache.derby.iapi.sql.depend.ProviderInfo[]* providerInfos
org.apache.derby.impl.sql.compile.CreateViewNode: *org.apache.derby.impl.sql.execute.ColumnInfo[]* colInfos
org.apache.derby.impl.sql.compile.CursorNode: *org.apache.derby.iapi.sql.ResultColumnDescriptor[]* [private] targetColumnDescriptors [no-stores]
org.apache.derby.impl.sql.compile.DeleteNode: *org.apache.derby.iapi.sql.execute.ConstantAction[]* [private] dependentConstantActions
org.apache.derby.impl.sql.compile.DeleteNode: *org.apache.derby.impl.sql.compile.StatementNode[]* [private] dependentNodes
org.apache.derby.impl.sql.compile.DMLModStatementNode: *org.apache.derby.impl.sql.execute.FKInfo[]* [protected] fkInfo
org.apache.derby.impl.sql.compile.DMLModStatementNode: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* [public] indicesToMaintain
org.apache.derby.impl.sql.compile.DMLModStatementNode: *java.lang.String[]* [public] indexNames
org.apache.derby.impl.sql.compile.DMLModStatementNode: *java.lang.String[]* [protected] fkTableNames
org.apache.derby.impl.sql.compile.DMLModStatementNode: *org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList[]* [protected] fkColDescriptors
org.apache.derby.impl.sql.compile.FromBaseTable: *org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor[]* conglomDescs
org.apache.derby.impl.sql.compile.FromBaseTable: *java.lang.String[]* [private] columnNames
org.apache.derby.impl.sql.compile.FromVTI: *org.apache.derby.impl.sql.compile.JavaValueNode[]* [private] methodParms [arraycopy]
org.apache.derby.impl.sql.compile.InsertNode: *org.apache.derby.iapi.types.RowLocation[]* [protected] autoincRowLocation
org.apache.derby.impl.sql.compile.MethodCallNode: *java.lang.String[]* [private] procedurePrimitiveArrayType [arraycopy]
org.apache.derby.impl.sql.compile.MethodCallNode: *org.apache.derby.iapi.types.JSQLType[]* [protected] signature [arraycopy]
org.apache.derby.impl.sql.compile.MethodCallNode: *org.apache.derby.impl.sql.compile.JavaValueNode[]* [protected] methodParms [arraycopy]
org.apache.derby.impl.sql.compile.MethodCallNode: *java.lang.String[]* methodParameterTypes [arraycopy]
org.apache.derby.impl.sql.compile.NodeFactoryImpl: *org.apache.derby.iapi.services.loader.ClassInfo[]* [private] [final] nodeCi
org.apache.derby.impl.sql.compile.OptimizerFactoryImpl: *org.apache.derby.iapi.sql.compile.JoinStrategy[]* [protected] joinStrategySet
org.apache.derby.impl.sql.compile.OptimizerImpl: *org.apache.derby.iapi.sql.compile.JoinStrategy[]* [private] joinStrategies [no-stores]
org.apache.derby.impl.sql.compile.OrderByList: *java.lang.Object[]* [private] resultRow [no-stores]
org.apache.derby.impl.sql.compile.OrderByList: *org.apache.derby.iapi.store.access.ColumnOrdering[]* [private] columnOrdering [no-stores]
org.apache.derby.impl.sql.compile.ParameterNode: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [private] userParameterTypes
org.apache.derby.impl.sql.compile.ParseException: *java.lang.String[]* [public] tokenImage [no-stores]
org.apache.derby.impl.sql.compile.SQLParser: *java.lang.Object[]* [private] paramDefaults [mod]
org.apache.derby.impl.sql.compile.SQLParser: *org.apache.derby.impl.sql.compile.SQLParser$JJCalls[]* [private] [final] jj_2_rtns [mod]
org.apache.derby.impl.sql.compile.StaticMethodCallNode: *org.apache.derby.iapi.services.compiler.LocalField[]* [private] outParamArrays
org.apache.derby.impl.sql.compile.TablePrivilegesNode: *org.apache.derby.impl.sql.compile.ResultColumnList[]* [private] columnLists
org.apache.derby.impl.sql.compile.TablePrivilegesNode: *org.apache.derby.iapi.services.io.FormatableBitSet[]* [private] columnBitSets
org.apache.derby.impl.sql.compile.UnaryOperatorNode: *java.lang.Object[]* [private] additionalArgs
org.apache.derby.impl.sql.conn.GenericLanguageConnectionContext: *org.apache.derby.iapi.sql.conn.StatementContext[]* [private] [final] statementContexts
org.apache.derby.impl.sql.conn.GenericStatementContext: *org.apache.derby.iapi.sql.execute.NoPutResultSet[]* [private] subqueryTrackingArray
org.apache.derby.impl.sql.conn.GenericStatementContext: *org.apache.derby.iapi.sql.execute.NoPutResultSet[]* [private] materializedSubqueries
org.apache.derby.impl.sql.CursorInfo: *org.apache.derby.iapi.sql.ResultColumnDescriptor[]* targetColumns [no-stores]
org.apache.derby.impl.sql.CursorInfo: *java.lang.String[]* updateColumns [no-stores]
org.apache.derby.impl.sql.execute.AggregateSortObserver: *org.apache.derby.impl.sql.execute.GenericAggregator[]* [protected] aggsToProcess [no-stores]
org.apache.derby.impl.sql.execute.AggregateSortObserver: *org.apache.derby.impl.sql.execute.GenericAggregator[]* [protected] aggsToInitialize [no-stores]
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.impl.sql.execute.ColumnInfo[]* [private] columnInfo
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.impl.sql.execute.ConstraintConstantAction[]* [private] constraintActions
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [private] rowBufferArray
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] rowBuffer
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] lastUniqueKey
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.sql.execute.ExecIndexRow[]* [private] indexRows
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.sql.execute.ExecRow[]* [private] baseRow
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* [private] compressIRGs
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [private] baseRowArray
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.types.RowLocation[]* [private] compressRL
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.store.access.SortController[]* [private] sorters
org.apache.derby.impl.sql.execute.AlterTableConstantAction: *org.apache.derby.iapi.store.access.ColumnOrdering[][]* [private] ordering
org.apache.derby.impl.sql.execute.BaseActivation: *java.lang.String[]* [private] autoGeneratedKeysColumnNames [mod]
org.apache.derby.impl.sql.execute.BaseActivation: *org.apache.derby.iapi.sql.execute.ExecRow[]* [protected] row [mod]
org.apache.derby.impl.sql.execute.BaseActivation: *org.apache.derby.iapi.sql.execute.CursorResultSet[]* [protected] raParentResultSets [mod]
org.apache.derby.impl.sql.execute.BasicNoPutResultSetImpl: *org.apache.derby.iapi.sql.execute.NoPutResultSet[]* [public] subqueryTrackingArray
org.apache.derby.impl.sql.execute.BulkTableScanResultSet: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [private] rowArray
org.apache.derby.impl.sql.execute.CardinalityCounter: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] prevKey
org.apache.derby.impl.sql.execute.ColumnInfo: *org.apache.derby.iapi.sql.depend.ProviderInfo[]* [public] providers [no-stores]
org.apache.derby.impl.sql.execute.ConstraintInfo: *java.lang.String[]* [private] columnNames [no-stores]
org.apache.derby.impl.sql.execute.CreateConstraintConstantAction: *java.lang.String[]* [private] columnNames [no-stores]
org.apache.derby.impl.sql.execute.CreateConstraintConstantAction: *org.apache.derby.iapi.sql.depend.ProviderInfo[]* [private] providerInfo [no-stores]
org.apache.derby.impl.sql.execute.CreateIndexConstantAction: *java.lang.String[]* [private] columnNames
org.apache.derby.impl.sql.execute.CreateTableConstantAction: *org.apache.derby.impl.sql.execute.ColumnInfo[]* [private] columnInfo
org.apache.derby.impl.sql.execute.CreateTableConstantAction: *org.apache.derby.impl.sql.execute.CreateConstraintConstantAction[]* [private] constraintActions
org.apache.derby.impl.sql.execute.CreateViewConstantAction: *org.apache.derby.impl.sql.execute.ColumnInfo[]* [private] [final] columnInfo
org.apache.derby.impl.sql.execute.CreateViewConstantAction: *org.apache.derby.iapi.sql.depend.ProviderInfo[]* [private] [final] providerInfo
org.apache.derby.impl.sql.execute.DeleteCascadeResultSet: *org.apache.derby.iapi.sql.ResultSet[]* [public] dependentResultSets [no-stores]
org.apache.derby.impl.sql.execute.DeleteConstantAction: *org.apache.derby.iapi.sql.execute.ConstantAction[]* dependentCActions [no-stores]
org.apache.derby.impl.sql.execute.DeleteResultSet: *org.apache.derby.impl.sql.execute.FKInfo[]* [protected] fkInfoArray [no-stores]
org.apache.derby.impl.sql.execute.DependentResultSet: *org.apache.derby.iapi.sql.execute.TemporaryRowHolder[]* sourceRowHolders [arraycopy]
org.apache.derby.impl.sql.execute.DependentResultSet: *org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet[]* sourceResultSets [arraycopy]
org.apache.derby.impl.sql.execute.DependentResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [protected] qualifiers [arraycopy]
org.apache.derby.impl.sql.execute.DistinctScalarAggregateResultSet: *org.apache.derby.iapi.store.access.ColumnOrdering[]* [private] order [no-stores]
org.apache.derby.impl.sql.execute.DMLWriteResultSet: *org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo[]* [protected] indexDCOCIs
org.apache.derby.impl.sql.execute.FKInfo: *java.lang.String[]* [public] fkConstraintNames
org.apache.derby.impl.sql.execute.FKInfo: *org.apache.derby.catalog.UUID[]* [public] fkUUIDs
org.apache.derby.impl.sql.execute.GenericAggregateResultSet: *org.apache.derby.impl.sql.execute.GenericAggregator[]* [protected] aggregates [no-stores]
org.apache.derby.impl.sql.execute.GenericRIChecker: *org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo[]* [protected] fkDcocis
org.apache.derby.impl.sql.execute.GenericRIChecker: *org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo[]* [protected] fkScocis
org.apache.derby.impl.sql.execute.GroupedAggregateResultSet: *org.apache.derby.iapi.store.access.ColumnOrdering[]* [private] order [no-stores] [arraycopy]
org.apache.derby.impl.sql.execute.HashScanResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [public] scanQualifiers [no-stores]
org.apache.derby.impl.sql.execute.HashScanResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [public] nextQualifiers [no-stores]
org.apache.derby.impl.sql.execute.HashTableResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [public] nextQualifiers [no-stores]
org.apache.derby.impl.sql.execute.IndexRowToBaseRowResultSet: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] rowArray
org.apache.derby.impl.sql.execute.IndexSetChanger: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* irgs
org.apache.derby.impl.sql.execute.IndexSetChanger: *org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo[]* [private] indexDCOCIs
org.apache.derby.impl.sql.execute.IndexSetChanger: *org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo[]* [private] indexSCOCIs
org.apache.derby.impl.sql.execute.IndexSetChanger: *java.lang.String[]* indexNames
org.apache.derby.impl.sql.execute.IndexSetChanger: *org.apache.derby.impl.sql.execute.IndexChanger[]* indexChangers
org.apache.derby.impl.sql.execute.InsertConstantAction: *java.lang.String[]* [private] columnNames
org.apache.derby.impl.sql.execute.InsertConstantAction: *org.apache.derby.iapi.types.RowLocation[]* [protected] autoincRowLocation
org.apache.derby.impl.sql.execute.InsertResultSet: *org.apache.derby.iapi.sql.execute.ExecIndexRow[]* [private] indexRows [arraycopy]
org.apache.derby.impl.sql.execute.InsertResultSet: *org.apache.derby.iapi.store.access.RowLocationRetRowSource[]* [private] rowSources [arraycopy]
org.apache.derby.impl.sql.execute.InsertResultSet: *org.apache.derby.iapi.store.access.ColumnOrdering[][]* [private] ordering [arraycopy]
org.apache.derby.impl.sql.execute.InsertResultSet: *org.apache.derby.iapi.store.access.SortController[]* [private] sorters [arraycopy]
org.apache.derby.impl.sql.execute.InsertResultSet: *org.apache.derby.impl.sql.execute.FKInfo[]* [private] fkInfoArray [arraycopy]
org.apache.derby.impl.sql.execute.InsertResultSet: *org.apache.derby.iapi.types.NumberDataValue[]* [private] aiCache [arraycopy]
org.apache.derby.impl.sql.execute.InternalTriggerExecutionContext: *java.lang.String[]* [protected] changedColNames [no-stores]
org.apache.derby.impl.sql.execute.LastIndexKeyResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [protected] qualifiers [no-stores]
org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] probeValues
org.apache.derby.impl.sql.execute.MultiProbeTableScanResultSet: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] origProbeValues
org.apache.derby.impl.sql.execute.NormalizeResultSet: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [private] desiredTypes
org.apache.derby.impl.sql.execute.NoRowsResultSetImpl: *org.apache.derby.iapi.sql.execute.NoPutResultSet[]* subqueryTrackingArray
org.apache.derby.impl.sql.execute.NoRowsResultSetImpl: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] normalizedGeneratedValues
org.apache.derby.impl.sql.execute.RIBulkChecker: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [private] referencedKeyRowArray
org.apache.derby.impl.sql.execute.RIBulkChecker: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [private] foreignKeyRowArray
org.apache.derby.impl.sql.execute.RISetChecker: *org.apache.derby.impl.sql.execute.GenericRIChecker[]* [private] checkers
org.apache.derby.impl.sql.execute.RowChangerImpl: *org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo[]* indexDCOCIs [arraycopy]
org.apache.derby.impl.sql.execute.RowChangerImpl: *org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo[]* indexSCOCIs [arraycopy]
org.apache.derby.impl.sql.execute.RowChangerImpl: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* irgs [arraycopy]
org.apache.derby.impl.sql.execute.RowChangerImpl: *java.lang.String[]* indexNames [arraycopy]
org.apache.derby.impl.sql.execute.RowChangerImpl: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] sparseRowArray [arraycopy]
org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics: *org.apache.derby.impl.sql.execute.rts.ResultSetStatistics[]* [public] dependentTrackingArray [no-stores]
org.apache.derby.impl.sql.execute.rts.RealHashTableStatistics: *org.apache.derby.impl.sql.execute.rts.ResultSetStatistics[]* [public] subqueryTrackingArray [no-stores]
org.apache.derby.impl.sql.execute.rts.RealProjectRestrictStatistics: *org.apache.derby.impl.sql.execute.rts.ResultSetStatistics[]* [public] subqueryTrackingArray [no-stores]
org.apache.derby.impl.sql.execute.rts.RunTimeStatisticsImpl: *org.apache.derby.impl.sql.execute.rts.ResultSetStatistics[]* [public] subqueryTrackingArray [no-stores]
org.apache.derby.impl.sql.execute.SetConstraintsConstantAction: *org.apache.derby.catalog.UUID[]* [private] cuuids [no-stores]
org.apache.derby.impl.sql.execute.SetConstraintsConstantAction: *org.apache.derby.catalog.UUID[]* [private] tuuids [no-stores]
org.apache.derby.impl.sql.execute.SetOpResultSet: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] prevCols [no-stores]
org.apache.derby.impl.sql.execute.SortResultSet: *org.apache.derby.iapi.store.access.ColumnOrdering[]* [private] order [no-stores]
org.apache.derby.impl.sql.execute.SortResultSet: *org.apache.derby.iapi.store.access.ColumnOrdering[]* [private] savedOrder [no-stores]
org.apache.derby.impl.sql.execute.TablePrivilegeInfo: *org.apache.derby.iapi.services.io.FormatableBitSet[]* [private] columnBitSets
org.apache.derby.impl.sql.execute.TableScanResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [public] qualifiers
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl: *org.apache.derby.iapi.sql.execute.ExecRow[]* [protected] rowArray
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] uniqueIndexRow
org.apache.derby.impl.sql.execute.TemporaryRowHolderImpl: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] positionIndexRow
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet: *org.apache.derby.iapi.sql.execute.ExecRow[]* [private] rowArray
org.apache.derby.impl.sql.execute.TemporaryRowHolderResultSet: *org.apache.derby.iapi.types.DataValueDescriptor[]* indexRow
org.apache.derby.impl.sql.execute.TriggerEventActivator: *org.apache.derby.impl.sql.execute.GenericTriggerExecutor[][]* [private] executors
org.apache.derby.impl.sql.execute.TriggerInfo: *org.apache.derby.iapi.sql.dictionary.TriggerDescriptor[]* triggerArray
org.apache.derby.impl.sql.execute.TriggerInfo: *java.lang.String[]* columnNames
org.apache.derby.impl.sql.execute.UpdateResultSet: *org.apache.derby.iapi.store.access.ConglomerateController[]* [protected] deferredUniqueCC [no-stores]
org.apache.derby.impl.sql.execute.UpdateResultSet: *org.apache.derby.iapi.store.access.ScanController[]* [protected] deferredUniqueScans [no-stores]
org.apache.derby.impl.sql.execute.UpdateResultSet: *org.apache.derby.impl.sql.execute.FKInfo[]* [private] fkInfoArray [no-stores]
org.apache.derby.impl.sql.execute.ValueRow: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] column [arraycopy]
org.apache.derby.impl.sql.execute.VTIResultSet: *org.apache.derby.iapi.store.access.Qualifier[][]* [private] pushedQualifiers [arraycopy]
org.apache.derby.impl.sql.execute.VTIResultSet: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [private] returnColumnTypes [arraycopy]
org.apache.derby.impl.sql.execute.WriteCursorConstantAction: *org.apache.derby.iapi.sql.dictionary.IndexRowGenerator[]* irgs [no-stores]
org.apache.derby.impl.sql.execute.WriteCursorConstantAction: *org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo[]* indexSCOCIs [no-stores]
org.apache.derby.impl.sql.execute.WriteCursorConstantAction: *java.lang.String[]* indexNames [no-stores]
org.apache.derby.impl.sql.execute.WriteCursorConstantAction: *org.apache.derby.impl.sql.execute.FKInfo[]* [private] fkInfo [no-stores]
org.apache.derby.impl.sql.GenericActivationHolder: *org.apache.derby.iapi.types.DataTypeDescriptor[]* paramTypes [no-stores]
org.apache.derby.impl.sql.GenericParameterValueSet: *org.apache.derby.impl.sql.GenericParameter[]* [private] [final] parms
org.apache.derby.impl.sql.GenericPreparedStatement: *org.apache.derby.iapi.types.DataTypeDescriptor[]* [protected] paramTypeDescriptors [no-stores]
org.apache.derby.impl.sql.GenericPreparedStatement: *org.apache.derby.iapi.sql.ResultColumnDescriptor[]* [protected] targetColumns [no-stores]
org.apache.derby.impl.sql.GenericPreparedStatement: *java.lang.String[]* [protected] updateColumns [no-stores]
org.apache.derby.impl.sql.GenericPreparedStatement: *java.lang.Object[]* [protected] savedObjects [no-stores]
org.apache.derby.impl.sql.GenericResultDescription: *org.apache.derby.iapi.sql.ResultColumnDescriptor[]* [private] columns
org.apache.derby.impl.store.access.btree.BranchRow: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] branchrow [arraycopy]
org.apache.derby.impl.store.access.btree.BTreeController: *org.apache.derby.iapi.types.DataValueDescriptor[]* scratch_template [no-stores]
org.apache.derby.impl.store.access.btree.BTreeRowPosition: *org.apache.derby.iapi.types.DataValueDescriptor[]* [public] current_positionKey [no-stores]
org.apache.derby.impl.store.access.btree.BTreeRowPosition: *org.apache.derby.iapi.types.DataValueDescriptor[]* [public] current_lock_template [no-stores]
org.apache.derby.impl.store.access.btree.BTreeRowPosition: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] positionKey_template [no-stores]
org.apache.derby.impl.store.access.btree.BTreeScan: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] init_template
org.apache.derby.impl.store.access.btree.BTreeScan: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] init_startKeyValue
org.apache.derby.impl.store.access.btree.BTreeScan: *org.apache.derby.iapi.store.access.Qualifier[][]* [protected] init_qualifier
org.apache.derby.impl.store.access.btree.BTreeScan: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] init_stopKeyValue
org.apache.derby.impl.store.access.btree.BTreeScan: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [protected] fetchNext_one_slot_array
org.apache.derby.impl.store.access.btree.ControlRow: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] row
org.apache.derby.impl.store.access.btree.ControlRow: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] scratch_row
org.apache.derby.impl.store.access.btree.SearchParameters: *org.apache.derby.iapi.types.DataValueDescriptor[]* [public] searchKey [no-stores]
org.apache.derby.impl.store.access.btree.SearchParameters: *org.apache.derby.iapi.types.DataValueDescriptor[]* [public] template [no-stores]
org.apache.derby.impl.store.access.conglomerate.GenericScanController: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] init_startKeyValue
org.apache.derby.impl.store.access.conglomerate.GenericScanController: *org.apache.derby.iapi.store.access.Qualifier[][]* [private] init_qualifier
org.apache.derby.impl.store.access.conglomerate.GenericScanController: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] init_stopKeyValue
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] row_for_export_template [no-stores]
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] scratch_template [no-stores]
org.apache.derby.impl.store.access.conglomerate.OpenConglomerateScratchSpace: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] scratch_row [no-stores]
org.apache.derby.impl.store.access.heap.HeapScan: *org.apache.derby.iapi.types.DataValueDescriptor[][]* [private] fetchNext_one_slot_array
org.apache.derby.impl.store.access.RAMAccessManager: *org.apache.derby.iapi.store.raw.LockingPolicy[]* [protected] table_level_policy
org.apache.derby.impl.store.access.RAMAccessManager: *org.apache.derby.iapi.store.raw.LockingPolicy[]* [protected] record_level_policy
org.apache.derby.impl.store.access.RAMAccessManager: *org.apache.derby.iapi.store.access.conglomerate.ConglomerateFactory[]* [protected] conglom_map
org.apache.derby.impl.store.access.sort.MergeScan: *org.apache.derby.iapi.store.raw.StreamContainerHandle[]* [protected] openScans
org.apache.derby.impl.store.access.sort.MergeSort: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] template [no-stores]
org.apache.derby.impl.store.access.sort.MergeSort: *org.apache.derby.iapi.store.access.ColumnOrdering[]* [protected] columnOrdering [no-stores]
org.apache.derby.impl.store.access.sort.Node: *org.apache.derby.iapi.types.DataValueDescriptor[]* [public] key [no-stores]
org.apache.derby.impl.store.access.sort.NodeAllocator: *org.apache.derby.impl.store.access.sort.Node[]* [private] array [arraycopy]
org.apache.derby.impl.store.access.sort.SortBuffer: *org.apache.derby.iapi.types.DataValueDescriptor[]* [private] deletedKey [no-stores]
org.apache.derby.impl.store.access.sort.SortScan: *org.apache.derby.iapi.types.DataValueDescriptor[]* [protected] current [no-stores] [arraycopy]
org.apache.derby.impl.store.raw.data.AllocationCache: *org.apache.derby.impl.store.raw.data.AllocExtent[]* [private] extents [arraycopy]
org.apache.derby.impl.store.raw.data.BaseDataFileFactory: *java.lang.String[]* [private] bfilelist
org.apache.derby.impl.store.raw.data.BasePage: *org.apache.derby.impl.store.raw.data.StoredRecordHeader[]* [private] headers [arraycopy]
org.apache.derby.impl.store.raw.data.EncryptData: *org.apache.derby.io.StorageFile[]* [private] oldFiles
org.apache.derby.impl.store.raw.RawStore: *java.lang.String[]* [private] actionFilter [no-stores]
org.apache.derby.impl.store.raw.xact.XactFactory: *org.apache.derby.iapi.store.raw.LockingPolicy[][]* [private] lockingPolicies
org.apache.derby.impl.tools.ij.ij: *org.apache.derby.impl.tools.ij.ij$JJCalls[]* [private] [final] jj_2_rtns [arraycopy]
org.apache.derby.impl.tools.ij.mtGrammar: *org.apache.derby.impl.tools.ij.mtGrammar$JJCalls[]* [private] [final] jj_2_rtns
org.apache.derby.impl.tools.ij.ParseException: *java.lang.String[]* [public] tokenImage [no-stores]
org.apache.derby.impl.tools.ij.utilMain: *org.apache.derby.impl.tools.ij.StatementFinder[]* [private] commandGrabber [mod]
org.apache.derby.impl.tools.ij.utilMain: *org.apache.derby.impl.tools.ij.ConnectionEnv[]* connEnv [mod]

N-CYCLES
========
[org/apache/derby/iapi/tools/i18n/LocalizedResource, org/apache/derby/impl/tools/ij/ij, org/apache/derby/impl/tools/ij/utilMain]
[org/apache/derby/iapi/types/TypeId, org/apache/derby/iapi/types/DataTypeDescriptor]
[org/apache/derby/iapi/sql/dictionary/ViewDescriptor, org/apache/derby/iapi/sql/dictionary/TableDescriptor]
[org/apache/derby/iapi/sql/dictionary/ConglomerateDescriptor, org/apache/derby/iapi/sql/dictionary/KeyConstraintDescriptor]
[org/apache/derby/iapi/store/access/DiskHashtable, org/apache/derby/iapi/store/access/BackingStoreHashtable]
[org/apache/derby/impl/sql/compile/ResultColumn, org/apache/derby/impl/sql/compile/ColumnReference]
[org/apache/derby/impl/sql/compile/GenerationClauseNode, org/apache/derby/catalog/types/DefaultInfoImpl, org/apache/derby/impl/sql/compile/ColumnDefinitionNode]
[org/apache/derby/impl/sql/catalog/DD_Version, org/apache/derby/impl/sql/catalog/DataDictionaryImpl]
[org/apache/derby/impl/sql/execute/IndexSetChanger, org/apache/derby/impl/sql/execute/TemporaryRowHolderImpl, org/apache/derby/impl/sql/execute/RowChangerImpl]
[org/apache/derby/impl/sql/execute/InternalTriggerExecutionContext, org/apache/derby/impl/sql/execute/TriggerEventActivator, org/apache/derby/impl/sql/execute/InsertResultSet]
[org/apache/derby/impl/store/access/btree/BTreeScan, org/apache/derby/impl/store/access/btree/BTreeRowPosition]
[org/apache/derby/impl/drda/PiggyBackedSessionData, org/apache/derby/impl/drda/DRDAResultSet, org/apache/derby/impl/drda/DRDAStatement, org/apache/derby/impl/drda/Database]
[org/apache/derby/impl/drda/DRDAString, org/apache/derby/impl/drda/Session, org/apache/derby/impl/drda/NetworkServerControlImpl, org/apache/derby/impl/drda/DRDAXAProtocol, org/apache/derby/impl/drda/DDMReader, org/apache/derby/impl/drda/DRDAConnThread, org/apache/derby/impl/drda/DDMWriter]
[org/apache/derby/jdbc/InternalDriver, org/apache/derby/impl/jdbc/TransactionResourceImpl]
[org/apache/derby/impl/jdbc/EmbedStatement, org/apache/derby/impl/jdbc/EmbedResultSet]
[org/apache/derby/jdbc/XATransactionState$CancelXATransactionTask, org/apache/derby/jdbc/XATransactionState]
[org/apache/derby/impl/load/ImportReadData, org/apache/derby/impl/load/ImportAbstract]
[org/apache/derby/impl/load/ExportWriteDataAbstract, org/apache/derby/impl/load/ExportAbstract]
[org/apache/derby/client/am/CallableStatement, org/apache/derby/client/am/CallableLocatorProcedures, org/apache/derby/client/am/LogicalDatabaseMetaData, org/apache/derby/client/am/LogicalConnection, org/apache/derby/client/net/NetXAConnection, org/apache/derby/client/net/NetXAResource, org/apache/derby/client/net/Typdef, org/apache/derby/client/net/Reply, org/apache/derby/client/net/Request, org/apache/derby/client/net/ConnectionReply, org/apache/derby/client/net/NetAgent, org/apache/derby/client/net/NetConnection, org/apache/derby/client/ClientPooledConnection, org/apache/derby/client/am/PreparedStatement, org/apache/derby/client/am/Cursor, org/apache/derby/client/am/ColumnMetaData, org/apache/derby/client/am/ResultSet, org/apache/derby/client/am/Section, org/apache/derby/client/am/Statement, org/apache/derby/client/am/EncryptionManager, org/apache/derby/client/am/DatabaseMetaData, org/apache/derby/client/am/CrossConverters, org/apache/derby/client/am/SectionManager, org/apache/derby/client/am/Sqlca, org/apache/derby/client/am/SqlException, org/apache/derby/client/am/Agent, org/apache/derby/client/am/Connection]
[org/apache/derby/client/net/NetCursor, org/apache/derby/client/net/NetStatement, org/apache/derby/client/net/NetResultSet]
[org/apache/derby/impl/store/raw/log/LogAccessFile, org/apache/derby/impl/store/raw/log/LogToFile]
[org/apache/derby/impl/store/raw/data/BaseDataFileFactory, org/apache/derby/impl/store/raw/data/EncryptData]
[org/apache/derby/impl/store/raw/data/StreamFileContainer, org/apache/derby/impl/store/raw/data/StreamFileContainerHandle]
[org/apache/derby/impl/store/raw/data/BaseContainer, org/apache/derby/impl/store/raw/data/BaseContainerHandle, org/apache/derby/impl/store/raw/data/RAFContainer]
[org/apache/derby/impl/store/access/CacheLock, org/apache/derby/impl/store/access/PropertyConglomerate]
[org/apache/derby/impl/store/access/RAMTransactionContext, org/apache/derby/impl/store/access/RAMTransaction]
[org/apache/derby/impl/store/replication/slave/SlaveController$SlaveLogReceiverThread, org/apache/derby/impl/store/replication/slave/SlaveController]
[org/apache/derby/impl/services/reflect/DatabaseClasses, org/apache/derby/impl/services/reflect/UpdateLoader]
[org/apache/derby/impl/store/replication/master/MasterController, org/apache/derby/impl/store/replication/master/AsynchronousLogShipper]
[org/apache/derby/impl/services/cache/BackgroundCleaner, org/apache/derby/impl/services/cache/ConcurrentCache]
[org/apache/derby/impl/store/access/sort/MergeInserter, org/apache/derby/impl/store/access/sort/MergeSort, org/apache/derby/impl/store/access/sort/SortBuffer]
[org/apache/derby/impl/store/raw/xact/TransactionTable, org/apache/derby/impl/store/raw/xact/XactFactory, org/apache/derby/impl/store/raw/xact/Xact, org/apache/derby/impl/store/raw/xact/TransactionTableEntry]
