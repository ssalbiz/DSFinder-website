DSFinder has run for 0 min. 5 sec.

0-CYCLES REPORT
===============


Blacklisted, likely not data structures:
net.sf.cglib.beans.BulkBeanException: *java.lang.Throwable* [private] cause
net.sf.cglib.core.AbstractClassGenerator: *java.lang.Object* [private] key
net.sf.cglib.core.ClassEmitter$FieldInfo: *java.lang.Object* value
net.sf.cglib.core.CodeGenerationException: *java.lang.Throwable* [private] cause
net.sf.cglib.proxy.MethodProxy: *java.lang.Object* [private] [final] initLock
net.sf.cglib.reflect.MethodDelegate: *java.lang.Object* [protected] target
net.sf.cglib.reflect.MethodDelegate$Generator: *java.lang.Object* [private] target

Linked List-like Data Structures:

Parent- and outer-type Data Structures:

Whitelisted, probable data structures:


Others:
Exact Field Matches:
Non-Object Fields:
net.sf.cglib.transform.AbstractClassLoader: *java.lang.ClassLoader* [private] classPath
java.lang.Object Fields:
net.sf.cglib.beans.BeanMap: *java.lang.Object* [protected] bean
net.sf.cglib.beans.BeanMap$Generator: *java.lang.Object* [private] bean
net.sf.cglib.beans.ImmutableBean$Generator: *java.lang.Object* [private] bean

COLLECTIONS REPORT
==================

Whitelisted: Possible compound data structures
==
net.sf.cglib.beans.BeanGenerator: *java.util.Map* [private] props
net.sf.cglib.beans.BeanMapEmitter$1: *java.util.Map* [private] [final] val$getters
net.sf.cglib.beans.BeanMapEmitter$2: *java.util.Map* [private] [final] val$setters
net.sf.cglib.beans.BeanMapEmitter$3: *java.util.Map* [private] [final] val$allProps
net.sf.cglib.beans.FixedKeySet: *java.util.Set* [private] set
net.sf.cglib.core.AbstractClassGenerator$1: *java.util.Set* [private] [final] val$nameCache
net.sf.cglib.core.AbstractClassGenerator$Source: *java.util.Map* cache
net.sf.cglib.core.ClassEmitter: *java.util.Map* [private] fieldInfo
net.sf.cglib.core.ClassNameReader$1: *java.util.List* [private] [final] val$array
net.sf.cglib.core.DuplicatesPredicate: *java.util.Set* [private] unique
net.sf.cglib.core.EmitUtils$10: *java.util.Map* [private] [final] val$cache
net.sf.cglib.core.EmitUtils$12: *java.util.Map* [private] [final] val$buckets
net.sf.cglib.core.EmitUtils$14: *java.util.Map* [private] [final] val$buckets
net.sf.cglib.core.EmitUtils$16: *java.util.Map* [private] [final] val$fbuckets
net.sf.cglib.core.EmitUtils$2: *java.util.Map* [private] [final] val$buckets
net.sf.cglib.core.EmitUtils$4: *java.util.Map* [private] [final] val$buckets
net.sf.cglib.core.EmitUtils$6: *java.util.Map* [private] [final] val$buckets
net.sf.cglib.proxy.CallbackHelper: *java.util.Map* [private] methodMap
net.sf.cglib.proxy.CallbackHelper: *java.util.List* [private] callbacks
net.sf.cglib.proxy.Enhancer$2: *java.util.Set* [private] [final] val$forcePublic
net.sf.cglib.proxy.Enhancer$6: *java.util.Map* [private] [final] val$originalModifiers
net.sf.cglib.proxy.Enhancer$6: *java.util.Map* [private] [final] val$indexes
net.sf.cglib.proxy.Enhancer$6: *java.util.Map* [private] [final] val$positions
net.sf.cglib.proxy.InterfaceMaker: *java.util.Map* [private] signatures
net.sf.cglib.proxy.MethodInterceptorGenerator$2: *java.util.Map* [private] [final] val$sigMap
net.sf.cglib.reflect.FastClassEmitter$3: *java.util.List* [private] [final] val$signatures
net.sf.cglib.reflect.FastClassEmitter$4: *java.util.List* [private] [final] val$info
net.sf.cglib.reflect.FastClassEmitter$GetIndexCallback: *java.util.Map* [private] indexes
net.sf.cglib.transform.AbstractProcessTask: *java.util.Vector* [private] filesets
net.sf.cglib.transform.impl.FieldProviderTransformer: *java.util.Map* [private] fields
net.sf.cglib.util.StringSwitcher$Generator$1: *java.util.List* [private] [final] val$stringList

ARRAYS REPORT
=============

net.sf.cglib.beans.BulkBean: *java.lang.String[]* [protected] getters [no-stores]
net.sf.cglib.beans.BulkBean: *java.lang.String[]* [protected] setters [no-stores]
net.sf.cglib.beans.BulkBean: *java.lang.Class[]* [protected] types [no-stores]
net.sf.cglib.beans.BulkBean$Generator: *java.lang.String[]* [private] getters [no-stores] [arraycopy]
net.sf.cglib.beans.BulkBean$Generator: *java.lang.String[]* [private] setters [no-stores] [arraycopy]
net.sf.cglib.beans.BulkBean$Generator: *java.lang.Class[]* [private] types [no-stores] [arraycopy]
net.sf.cglib.core.ClassEmitter$1: *org.objectweb.asm.Type[]* [private] [final] val$interfaces [no-stores]
net.sf.cglib.core.CodeEmitter$State: *org.objectweb.asm.Type[]* argumentTypes [no-stores]
net.sf.cglib.core.CodeEmitter$State: *org.objectweb.asm.Type[]* exceptionTypes [no-stores]
net.sf.cglib.proxy.Enhancer: *java.lang.Class[]* [private] interfaces
net.sf.cglib.proxy.Enhancer: *net.sf.cglib.proxy.Callback[]* [private] callbacks
net.sf.cglib.proxy.Enhancer: *org.objectweb.asm.Type[]* [private] callbackTypes
net.sf.cglib.proxy.Enhancer: *java.lang.Class[]* [private] argumentTypes
net.sf.cglib.proxy.Enhancer: *java.lang.Object[]* [private] arguments
net.sf.cglib.proxy.Mixin$Generator: *java.lang.Class[]* [private] classes [no-stores]
net.sf.cglib.proxy.Mixin$Generator: *java.lang.Object[]* [private] delegates [no-stores]
net.sf.cglib.proxy.Mixin$Route: *java.lang.Class[]* [private] classes
net.sf.cglib.reflect.MulticastDelegate: *java.lang.Object[]* [protected] targets [arraycopy]
net.sf.cglib.transform.ClassReaderGenerator: *org.objectweb.asm.Attribute[]* [private] [final] attrs [no-stores]
net.sf.cglib.transform.ClassTransformerChain: *net.sf.cglib.transform.ClassTransformer[]* [private] chain [no-stores]
net.sf.cglib.transform.impl.AddDelegateTransformer: *java.lang.Class[]* [private] delegateIf
net.sf.cglib.transform.impl.AddPropertyTransformer: *java.lang.String[]* [private] [final] names
net.sf.cglib.transform.impl.AddPropertyTransformer: *org.objectweb.asm.Type[]* [private] [final] types
net.sf.cglib.transform.impl.FieldProviderTransformer$1: *java.lang.String[]* [private] [final] val$names [no-stores]
net.sf.cglib.transform.impl.FieldProviderTransformer$2: *java.lang.String[]* [private] [final] val$names [no-stores]
net.sf.cglib.transform.impl.UndeclaredThrowableTransformer$1: *org.objectweb.asm.Type[]* [private] [final] val$exceptions [no-stores]
net.sf.cglib.util.ParallelSorter: *java.lang.Object[]* [protected] a [no-stores]
net.sf.cglib.util.ParallelSorter$ComparatorComparer: *java.lang.Object[]* [private] a [no-stores]
net.sf.cglib.util.ParallelSorter$Generator: *java.lang.Object[]* [private] arrays [no-stores]
net.sf.cglib.util.ParallelSorter$ObjectComparer: *java.lang.Object[]* [private] a [no-stores]
net.sf.cglib.util.StringSwitcher$Generator: *java.lang.String[]* [private] strings [no-stores]

N-CYCLES
========
[net/sf/cglib/core/CodeEmitter$State, net/sf/cglib/core/ClassEmitter, net/sf/cglib/core/CodeEmitter]
